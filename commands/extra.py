from utils import InitData
from vkbottle import keyboard_gen
from random import randint, choice
from re import search

class ExtraCommands(InitData.Data):
	help = [
		'/BAN[ <–ø—Ä–∏—á–∏–Ω–∞>] & <rep_mes> - —Ç–∏–ø–æ –±–∞–Ω',
		'/Ord <chr>+ - –∫–æ–¥ –≤ —é–Ω–∏–∫–æ–¥–µ —Å–∏–º–≤–æ–ª–æ–≤',
		'/TWDNE - –ø–æ–∫–∞–∂–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –≤–∞–π—Ñ—É —Å —Å–∞–π—Ç–∞ ThisWaifuDoesNotExist'
	]

	def __init__(self):
		@self.bot.on.chat_message(text = ['ban <text>', 'ban'], command = True, with_reply_message = True)
		async def ban(message, text = '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'):
			await self.lvl_class.user(id := message.reply_message.from_id)
			await message(f"–ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n{self.lvl_class[id]}\n–ü—Ä–∏—á–∏–Ω–∞: {text}", keyboard = keyboard_gen([
				[{'text': '–Ø—Å–Ω–æ-–ø–æ–Ω—è—Ç–Ω–æ', 'color': 'positive', 'payload': {'command': 'ban'}}]
			], inline = True))

		@self.bot.on.chat_message(text = ['echo <text>', 'echo'], command = True, is_admin = True)
		async def echo(message, text = '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'):
			await message(f'{text}\n' + ''.join(f"[id{item['member_id']}|üí¨]"
					for item in (await self.bot.api.messages.get_conversation_members(peer_id = message.peer_id)).items
					if item['member_id'] > 0 and item['member_id'] != message.from_id))

		@self.bot.on.chat_message(text = 'ord', command = True, with_reply_message = True)
		async def ordo(message):
			await message(f'–ù–µ –∑–Ω–∞—é –∑–∞—á–µ–º —Ç–µ–±–µ, –Ω–æ –ø–æ–ª—É—á–∞–π: {[ord(text) for text in message.reply_message.text]}')

		@self.bot.on.chat_message(text = 'twdne', command = True)
		async def twdne(message):
			compliment = choice(('—Å–∏–º–ø–∞—Ç–∏—á–Ω–∞—è', '–ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è', '–≤–∏—Ä—Ç—É–æ–∑–Ω–∞—è', '–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è', '–º–∏–ª–∞—è', '–±–µ—Å—Ü–µ–Ω–Ω–∞—è'))
			await message(message = f'–≠—Ç–∞ –≤–∞–π—Ñ—É —Ç–∞–∫–∞—è {compliment}', attachment = await self.twdne.get_doc(randint(1, 99999)))

		@self.bot.on.chat_message(text = 'date', command = True, with_reply_message = True)
		async def date_created(message):
			date = search(r'<ya:created dc:date="(?P<Y>\d{4})-(?P<M>\d{2})-(?P<D>\d{2}).+?"/>', await self.foaf(id := message.reply_message.from_id))
			await self.lvl_class.user(id)
			await message(message = f"–Ø –ø—Ä–æ—Å–ª–µ–¥–∏–ª–∞ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {self.lvl_class[id]},\n–æ–Ω —Å–æ–∑–¥–∞–ª —Å—Ç—Ä–∞–Ω–∏—Ü—É: {date['D']}-{date['M']}-{date['Y']}")

		@self.bot.on.chat_message(text = 'tts <text>', command = True)
		async def tts(message, text):
			await message(attachment = await self.amessage.get_doc(text))