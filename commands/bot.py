dict_help = {
	None : [
		'/Help Top - —Ç–æ–ø',
		'/Help LVL - —É—Ä–æ–≤–Ω–∏',
		'/Help Nick - –Ω–∏–∫–∏',
		'/Help Extra - –¥–æ–ø. –∫–æ–º–∞–Ω–¥—ã'
	],
	'top' : [
		'/TopLVL[ <–æ—Ç> <–¥–æ>] - —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
		'/TopTemp[ <–æ—Ç> <–¥–æ>] - –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'
	],
	'lvl' : [
		'/MyLVL - –º–æ–π —É—Ä–æ–≤–µ–Ω—å',
		'/LVL & <rep_mes> - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—Ä–æ–≤–µ–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–∞',
		'/Tele <count> & <rep_mes> - –ø–µ—Ä–µ–¥–∞—Ç—å —Å–≤–æ—é exp –¥—Ä—É–≥–æ–º—É',
	],
	'nick' : [
		'/Set Nick <–ù–∏–∫> - –∑–∞–º–µ–Ω–∏—Ç—å –∏–º—è –Ω–∞ –Ω–∏–∫',
		'/Del Nick - –≤–µ—Ä–Ω—É—Ç—å –∏–º—è'
	],
	'extra' : [
		'/BAN[ <–ø—Ä–∏—á–∏–Ω–∞>] & <rep_mes> - —Ç–∏–ø–æ –±–∞–Ω',
		'/Ord <chr>+ - –∫–æ–¥ –≤ —é–Ω–∏–∫–æ–¥–µ —Å–∏–º–≤–æ–ª–æ–≤'
	]
}

def replace_smile(str):
	for smile in ('ü•á', 'ü•à', 'ü•â', '‚ù∏', '‚ù∑', '\n'):
		str = str.replace(smile, '‚õî')
	return str

def load(bot):
	from vkbottle import keyboard_gen
	from lvls import LVL, atta
	lvl_class = LVL.get_current()
	
	@bot.on.chat_message(text = ['help', 'help <extra:inc[top,lvl,nick,extra]>'], command = True)
	async def help(message, extra = None):
		await message('–ö–æ–º–∞–Ω–¥—ã:\n' + '\n'.join(f'{n + 1}) {comm}' for n, comm in enumerate(dict_help[extra])))

	@bot.on.chat_message(text = 'mylvl', command = True)
	async def mylvl(message):
		await lvl_class.send(id := message.from_id)
		await message(lvl_class[id])
	
	@bot.on.chat_message(text = 'lvl', command = True, with_reply_message = True)
	async def lvl(message):
		await lvl_class.send(id := message.reply_message.from_id)
		await message(lvl_class[id])

	@bot.on.chat_message(text = ['ban <text>', 'ban'], command = True, with_reply_message = True)
	async def ban(message, text = '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'):
		await lvl_class.user(id := message.reply_message.from_id)
		await message(f"–ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n{lvl_class[id]}\n–ü—Ä–∏—á–∏–Ω–∞: {text}", keyboard = keyboard_gen([
			[{'text': '–Ø—Å–Ω–æ-–ø–æ–Ω—è—Ç–Ω–æ', 'color': 'positive', 'payload': {'command': 'ban'}}]
		], inline = True))
	
	@bot.on.chat_message(text = ['echo <text>', 'echo'], command = True, is_admin = True)
	async def echo(message, text = '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'):
		await message(f'{text}\n' + ''.join(f"[id{item['member_id']}|üí¨]"
				for item in (await bot.api.messages.get_conversation_members(peer_id = message.peer_id)).items
				if item['member_id'] > 0 and item['member_id'] != message.from_id))

	@bot.on.chat_message(text = 'set nick <nick:max[12]>', command = True, with_reply_message = False)
	async def set_nick(message, nick):
		nick = replace_smile(nick)
		await lvl_class.update_nick(message.from_id, nick = nick)
		await message(f'–ù–∏–∫: "{nick}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

	@bot.on.chat_message(text = 'set nick <nick:max[12]>', command = True, is_admin = True, with_reply_message = True)
	async def set_nick(message, nick):
		nick = replace_smile(nick)
		await lvl_class.update_nick(message.reply_message.from_id, nick = nick)
		await message(f'–ù–∏–∫: "{nick}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
	
	@bot.on.chat_message(text = 'del nick', command = True, with_reply_message = False)
	async def del_nick(message):
		await lvl_class.update_nick(message.from_id)
		await message('–ù–∏–∫ —É–¥–∞–ª—ë–Ω')

	@bot.on.chat_message(text = 'del nick', command = True, is_admin = True, with_reply_message = True)
	async def del_nick(message):
		await lvl_class.update_nick(message.reply_message.from_id)
		await message('–ù–∏–∫ —É–¥–∞–ª—ë–Ω')

	@bot.on.chat_message(text = ['exp <exp:int>', 'exp <exp:inc[up,down]>', 'exp <lvl:int> <exp:int>'], command = True, is_admin = True, with_reply_message = True)
	async def exp(message, exp, lvl = 0):
		if exp in ('up', 'down'): exp = atta(message.reply_message.text, message.reply_message.attachments, exp == 'down')
		await lvl_class.update_lvl(id := message.reply_message.from_id, exp = exp, lvl = lvl)
		await lvl_class.send(id)
		await message((f"{lvl:+}‚ìÅ|" if lvl else '') + f"{exp:+}‚í∫:\n" + lvl_class[id])
	
	@bot.on.chat_message(text = ['tele <exp:pos>', 'tele <exp:inc[up]>'], command = True, with_reply_message = True, from_id_pos = True)
	async def tele(message, exp):
		if exp == 'up': exp = atta(message.reply_message.text, message.reply_message.attachments)
		if await lvl_class.remove_exp(id1 := message.from_id, exp = exp):
			await lvl_class.update_lvl(id2 := message.reply_message.from_id, exp = exp)
			await lvl_class.send(id1, id2)
			blank = f"{exp:+}‚í∫:\n{lvl_class[id2]}\n{-exp:+}‚í∫:\n{lvl_class[id1]}"
		else:
			await lvl_class.send(id1)
			blank = f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚í∫!\n{lvl_class[id1]}"
		await message(blank)
	
	@bot.on.chat_message(text = 'ord', command = True, with_reply_message = True)
	async def ordo(message):
		await message(f'–ù–µ –∑–Ω–∞—é –∑–∞—á–µ–º —Ç–µ–±–µ, –Ω–æ –ø–æ–ª—É—á–∞–π: {[ord(text) for text in message.reply_message.text]}')
	
	@bot.on.chat_message(text = 'info', command = True, with_reply_message = True)
	async def info(message):
		await message(f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è {atta(message.reply_message.text, message.reply_message.attachments):+}‚í∫")
